<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>js on Even - A super concise theme for Hugo</title>
    <link>http://blog.justwe.site/categories/js/</link>
    <description>Recent content in js on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 31 Oct 2017 23:11:45 +0000</lastBuildDate>
    
	<atom:link href="http://blog.justwe.site/categories/js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>js promise 对象</title>
      <link>http://blog.justwe.site/post/js-promise/</link>
      <pubDate>Tue, 31 Oct 2017 23:11:45 +0000</pubDate>
      
      <guid>http://blog.justwe.site/post/js-promise/</guid>
      <description>我们本次要了解一下 es6 中的 Promise 对象 then() 在 ES6 中函数有一个很明显的区别就是一些异步函数中不再是使用回调函数callback(),而是then() 方法来</description>
    </item>
    
    <item>
      <title>Vue的一个拖动插件</title>
      <link>http://blog.justwe.site/post/vue-dnd/</link>
      <pubDate>Mon, 21 Aug 2017 17:11:28 +0000</pubDate>
      
      <guid>http://blog.justwe.site/post/vue-dnd/</guid>
      <description>这里介绍一个拿来即用的拖动插件 这里只是一个 es5 的 demo 先上代码: 简单的拖动排序示例 {% jsfiddle 92dcvg1u %} 拖动 clone 示例 {% jsfiddle ebemtLz6 %} 这里用上了 option 中的 group配置, group:{ name:&#39;people&#39;, pull:</description>
    </item>
    
    <item>
      <title>js生成笛卡尔积数组</title>
      <link>http://blog.justwe.site/post/js-decartes/</link>
      <pubDate>Tue, 18 Jul 2017 10:36:50 +0000</pubDate>
      
      <guid>http://blog.justwe.site/post/js-decartes/</guid>
      <description>以下转载了来自 segmentfault的一个回答 第一种 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 &amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt; var data = new Array(new Array(1, 2, 3), new Array(4, 5, 6)); var result = []; console.log(data); function descartes(arrIndex, aresult){ if (arrIndex</description>
    </item>
    
    <item>
      <title>element-dialog</title>
      <link>http://blog.justwe.site/post/element-dialog/</link>
      <pubDate>Tue, 11 Jul 2017 19:50:33 +0000</pubDate>
      
      <guid>http://blog.justwe.site/post/element-dialog/</guid>
      <description>使用 elementui 的对话框示例出现问题,esc 或者点击右上的 X 没反应,目前的规避方式就是把 :visible.sync=&amp;quot;dialogFormVisible&amp;quot; 用 v-model=&amp;quot;dialogFormVisible&amp;quot; 代替,如果下 1 2 3 4 5 6 7 8 9 10 11 &amp;lt;el-dialog title=&amp;#34</description>
    </item>
    
    <item>
      <title>转 跨域请求时两次发送请求的问题</title>
      <link>http://blog.justwe.site/post/axios-cors/</link>
      <pubDate>Fri, 23 Jun 2017 16:42:38 +0000</pubDate>
      
      <guid>http://blog.justwe.site/post/axios-cors/</guid>
      <description>跨域的时候总会碰上各种各样的问题,这就是其中一种情况 检查一下，两次请求分别的 Request Method: 因为是跨域请求，客户端发先发送一个OPTIONS 请求 Preflighted Req</description>
    </item>
    
    <item>
      <title>vue-transition</title>
      <link>http://blog.justwe.site/post/vue-transition/</link>
      <pubDate>Sat, 06 May 2017 13:24:23 +0000</pubDate>
      
      <guid>http://blog.justwe.site/post/vue-transition/</guid>
      <description>对 vue 的渐变效果的简单使用 单个节点的渐变效果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;tit</description>
    </item>
    
    <item>
      <title>使用 axios-post 提交数据</title>
      <link>http://blog.justwe.site/post/vue-axios-post/</link>
      <pubDate>Tue, 02 May 2017 16:45:00 +0000</pubDate>
      
      <guid>http://blog.justwe.site/post/vue-axios-post/</guid>
      <description>继 vue-resource 之后, axios 是 vue 官方首推的网络请求组件 axios简介 它的功能更强大,而且可以无痛迁移到新的项目当中,有尤大的原话就是: &amp;gt; 最近团队讨论了一下，</description>
    </item>
    
  </channel>
</rss>